    <div id="wrapper">

      <div id="map"></div>
      <div id="filter">
        <%= render 'filter' %>

      </div>
      <div id="search">
        <form class="form-inline">
          <input type="text" id="radius" name="radius" placeholder="Enter KM" class="form-control km-entry" style="width: 100px;">
          <input type="text" id="address" name="address" placeholder="Point or Enter Address" class="form-control" style="width: 250px;">
          <input type="submit" value="Search" class="btn btn-primary btn-bordered btn-bordered-primary" style="background-color: blue; border: none;">
        </form>

      </div>
      <div id="results">
        <div id="results-button">
        </div>

      </div>
      <!-- put in link to the next page -->
    </div>
    <!-- end of wrapper -->

    <% content_for(:after_js) do %>
      <%= javascript_include_tag "https://maps.googleapis.com/maps/api/js?language=en&key=#{ENV['GOOGLE_API_BROWSER_KEY']}&callback=initMap" %>
      <script>
        var markers = []

        var map;

        var priorityHash = {high: 200, medium: 100, low: 0, null:0 }


        function initMap(callback) {
            map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: new google.maps.LatLng(<%= @requests.first.latitude %>, <%= @requests.first.longitude %>),
            mapTypeId: 'roadmap'
          });

          map.markers = [];
          map.circles = [];
          // var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';
          var foodImage = {
            url: '<%= asset_path('food.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }
          var waterImage = {
            url: '<%= asset_path('water.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }

          var clothingImage = {
            url: '<%= asset_path('clothing.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }

          var blanketsImage = {
            url: '<%= asset_path('blankets.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }

          var tentsImage = {
            url: '<%= asset_path('tents.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }

          var firstaidImage = {
            url: '<%= asset_path('firstaid.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }

          var driversImage = {
            url: '<%= asset_path('drivers.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(15, 15)
          }

           var heavyImage = {
            url: '<%= asset_path('heavy.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(15, 15)
          }

           var generalImage = {
            url: '<%= asset_path('general.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(15, 15)
          }

          var fireImage = {
            url: '<%= asset_path('fire_image.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }


          var medicalImage = {
            url: '<%= asset_path('medical.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }

          var rescueImage = {
            url: '<%= asset_path('rescue.png') %>',
            scaledSize: new google.maps.Size(45, 45),
            anchor: new google.maps.Point(20, 20)

          }

          var icons = {
            food: {
              icon: foodImage
            },
            water: {
              icon: waterImage
            },
            clothing: {
              icon: clothingImage
            },
            blankets: {
              icon: blanketsImage
            },
            tents: {
              icon: tentsImage
            },
            firstaid: {
              icon: firstaidImage
            },
            // supplies icons

            drivers: {
              icon: driversImage
            },

            heavy: {
              icon: heavyImage
            },

            general: {
              icon: generalImage
            },
            // volunteers icons

            fire: {
              icon: fireImage
            },

            medical: {
              icon: medicalImage
            },

            rescue: {
              icon: rescueImage
            },
            //emergency icons

            // library: {
            //   icon: iconBase + 'info-i_maps.png'
            // }
          };

        var requests = [
          <% ItemsRequest.all.each do |ir| %>


         {
          position: new google.maps.LatLng(<%= ir.request.latitude %>, <%= ir.request.longitude %>),
          category: '<%= ir.request.category %>', id: <%= ir.request.id %>, user_id: <%= ir.request.user_id %>, address: '<%= ir.request.address %>', priority: '<%= ir.request.priority %>', status: '<%= ir.status %>', created_at: '<%= ir.created_at %>', updated_at: '<%= ir.updated_at %>', item_name: '<%= ir.item.name %>', quantity: <%= ir.quantity %>, item_id: '<%= ir.item.id %>'
        },

          <% end %>
          ];
          // end of requests assignment
          function createCircle(marker, priorityRadius) {
            var circle = new google.maps.Circle({
                center: marker.position,
                map:map,
                radius:priorityRadius,
                strokeColor: "blue",
                strokeOpacity:0.25,
                strokeWeight: 2,
                fillColor: "blue"
            });
            return circle;
          }

          function createMarker(index) {

            var marker = new google.maps.Marker({
              position: requests[index].position,
              icon: icons[requests[index].item_name].icon, //CHANGE ICONS HERE
              map: map,
              id: requests[index].id,
              user_id: requests[index].user_id,
              category: requests[index].category, // GOING TO BE ITEM
              address: requests[index].address,
              priority: requests[index].priority,
              status: requests[index].status,
              item_name: requests[index].item_name,
              quantity: requests[index].quantity,
              created_at: requests[index].created_at,
              updated_at: requests[index].updated_at,

              // label: labels[i % labels.length]
            });

            var priority = "high";  // TAKE PRIORITY HERE

            map.circles.push(createCircle(marker, priorityHash[priority]));

            // createdpushes circles into array


            // console.log(marker.map);
// var map = map;


             // circle.bindTo('center',marker[index],'position');

            //  function getCustomRadiusForZoom(zoomLevel) {
            //     switch (true) {
            //         case (zoomLevel < 10 && zoomLevel > 5):
            //             return 30;
            //         case (zoomLevel <= 5 && zoomLevel > 1):
            //             return 15;
            //         case (zoomLevel <= 1):
            //             return 5;
            //     }
            //     return radius;
            //   };

            //  google.maps.event.addListener(map, 'zoom_changed', function() {
            //   var zoomLevel = map.getZoom();
            //   circle.setRadius(getCustomRadiusForZoom(zoomLevel));
            // });


              function displayEachData() {

                  // pass this as params[:data_value] in controller

                $('#results').html('<p class="results-text">' + 'ID:  ' + marker.id + '</p>' + '<p class="results-text">' + 'Category:  ' + marker.category + '</p>'
                  + '<p class="results-text">' + 'Address:  ' + marker.address + '</p>'
                  + '<p class="results-text">' + 'Priority:  ' + marker.priority + '</p>'
                  + '<p class="results-text">' + 'Status:  ' + marker.status + '</p>'
                   + '<p class="results-text">' + 'Item:  ' + marker.item_name + '</p>'
                    + '<p class="results-text">' + 'Quantity:  ' + marker.quantity + '</p>'
                  + '<p class="results-text">' + 'Created at:  ' + marker.created_at + '</p>'
                  + '<p class="results-text">' + 'Updated at:  ' + marker.updated_at + '</p>'
                  // + '<%#= button_to "Show Details", user_request_path(' + marker.user_id + ', ' + marker.id + '), class: 'btn btn-primary' %>'
                  + '<a href="/users/' + marker.user_id + '/requests/' + marker.id + '" class="btn btn-primary" style="background-color:green;"> Show Details </a>'
                  )};
                // end of displayEachData


            marker.addListener('click', function(){

              displayEachData();

               $('#results').toggle()
            });
            // end of addListener click

            return marker;
   }
    // end of createMarker

      for (i = 0; i < requests.length; i++) {
        map.markers.push(createMarker(i));
      }
      // end of for loop
      // var markerCluster = new MarkerClusterer(map, map.markers,
      //       {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
      // this is for clustering.. need to load marketclusterer

  // console.log(markers.map)


        // console.log(markers);
        // callback();
        callback();
      }
       // END OF INITMAP end of init map

        var filtersHash = {food:false, water:false, clothing:false, blankets:false, tents:false, firstaid:false, drivers:false, heavy:false, general:false, fire:false, medical:false, rescue:false }
        //set initial value of checkboxes

        function filterMarkers(hash) {

          for (i = 0; i < map.markers.length; i++) {

            var itemName = map.markers[i].item_name; //

            if ( hash[itemName] == true ) {
              console.log(hash);
              console.log(itemName);
              console.log(map.markers[i].id);
              map.markers[i].setMap(null);
              console.log(map.markers[i].map);
              // map.circles[0].setVisible(false);
              // map.markers[i].setVisible(false);
              // delete map.markers[i];
              console.log(map.markers)
               // delete map.circles[0];
              console.log("true");
              map.circles[i].setMap(null);

          } else {

            map.markers[i].setMap(map);
            map.circles[i].setMap(map);
            // console.log("false");

          };
        };
      };
        //end of filterMarkers

      function onFilterChange() {
       $('input[name=filter]').change(function () {
        var changedBox = $(this).attr('value');
        filtersHash[changedBox] = !filtersHash[changedBox];
        // console.log(changedBox);
        // console.log(filtersHash[changedBox]);
         filterMarkers(filtersHash);

        });
      };
      // get value of checkbox


     // function markerLength() {
     //  console.log(map.markers.length);

     // };

      initMap(onFilterChange);

      </script>
      <!-- end of map script -->

      <%#= javascript_include_tag "https://maps.googleapis.com/maps/api/js?language=en&key=#{ENV['GOOGLE_API_BROWSER_KEY']}&callback=initMap" %>

      <!-- <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=[key]&callback=initMap">
      </script> -->

      <%#= javascript_include_tag "https://maps.google.com/maps/api/js?libraries=places&key=#{ENV['GOOGLE_API_BROWSER_KEY']}" %>

      <script>

        $(document).ready(function() {
          $("#results").hide();
        });

      </script>

      <script>
       function toggleChevron(e) {
        $(e.target)
        .prev('.panel-heading')
        .find("i.indicator")
        .toggleClass('fa-caret-down fa-caret-right');
        }
        $('#accordion').on('hidden.bs.collapse', toggleChevron);
        $('#accordion').on('shown.bs.collapse', toggleChevron);
      </script>
    </script>
    <% end %>
